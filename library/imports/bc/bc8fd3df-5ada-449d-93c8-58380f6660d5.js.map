{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\SelectManager.ts"],"names":[],"mappings":";;;;;AAAA,uDAAkD;AAClD,+CAA0C;AAC1C,iDAA4C;AAC5C,wCAAmC;AACnC,+CAA0C;AAC1C,mDAA8C;AAExC,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAE1C;;GAEG;AAEH;IAA2C,iCAAgB;IAD3D;QAAA,qEAkDC;QA9CG,yBAAmB,GAAY,IAAI,CAAC;QAKpC,mBAAa,GAAc,EAAE,CAAC;;IAyClC,CAAC;sBAjDoB,aAAa;IAU9B,8BAAM,GAAN;QACI,eAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;IAClC,CAAC;IAED,6BAAK,GAAL;QACI,0BAAgB,CAAC,eAAe,CAAC,CAAC,uBAAa,EAAE,sBAAY,EAAE,wBAAc,CAAC,CAAC,CAAC;IACpF,CAAC;IAED,mCAAW,GAAX,UAAY,OAAe,EAAC,OAAiB;QAA7C,iBAgBC;QAfG,uBAAa,CAAC,QAAQ,CAAC,MAAM,GAAG,gBAAM,CAAC,MAAM,CAAC;QAC9C,mBAAmB;QACnB,IAAI,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC;QAC3E,OAAO,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK;YAC3B,IAAI,MAAM,GAAG,EAAE,CAAC,WAAW,CAAC,KAAI,CAAC,mBAAmB,CAAC,CAAC;YACtD,aAAa;YACb,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;YACvD,MAAM,CAAC,YAAY,CAAC,sBAAY,CAAC,CAAC,OAAO,GAAG,OAAO,CAAC;YACpD,MAAM,CAAC,YAAY,CAAC,sBAAY,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;YAChD,MAAM,CAAC,YAAY,CAAC,sBAAY,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC;YAC7D,MAAM,CAAC,MAAM,GAAG,KAAI,CAAC,IAAI,CAAC;YAC1B,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;YAC/D,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,kCAAU,GAAV;QACI,IAAG,uBAAa,CAAC,QAAQ,CAAC,MAAM,IAAI,gBAAM,CAAC,MAAM,EAAC;YAC9C,EAAE,CAAC,KAAK,CAAC,mBAAmB,GAAG,sBAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC7D,OAAO;SACV;QACD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,OAAO;YAC/B,OAAO,CAAC,OAAO,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,uBAAa,CAAC,QAAQ,CAAC,MAAM,GAAG,gBAAM,CAAC,IAAI,CAAC;QAC5C,wBAAc,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACnC,CAAC;;IA5CD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8DACkB;IAKpC;QAHC,QAAQ,CAAC;YACN,OAAO,EAAE,KAAK;SACjB,CAAC;wDAC4B;IARb,aAAa;QADjC,OAAO;OACa,aAAa,CAiDjC;IAAD,oBAAC;CAjDD,AAiDC,CAjD0C,0BAAgB,GAiD1D;kBAjDoB,aAAa","file":"","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["import ManagerInterface from \"./ManagerInterface\";\r\nimport SelectButton from \"./SelectButton\";\r\nimport StatusManager from \"./StatusManager\";\r\nimport Status from \"./enum/Status\";\r\nimport InputManager from \"./InputManager\";\r\nimport ContentManager from \"./ContentManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n/**\r\n * 默认的选项按钮和动态生成的都在此节点下\r\n */\r\n@ccclass\r\nexport default class SelectManager extends ManagerInterface {\r\n\r\n    @property(cc.Node)\r\n    defaultSelectButton: cc.Node = null;\r\n\r\n    @property({\r\n        visible: false,\r\n    })\r\n    selectButtons: cc.Node[] = [];\r\n\r\n    onLoad(){\r\n        SelectManager.instance = this;\r\n    }\r\n\r\n    start(){\r\n        ManagerInterface.managersIsExist([StatusManager, InputManager, ContentManager]);\r\n    }\r\n\r\n    showSelects(varName: string,selects: string[]){\r\n        StatusManager.instance.status = Status.Select;\r\n        //每有一个按钮，起始位置向上挪100\r\n        let startPosY = this.defaultSelectButton.position.y + selects.length * 100;\r\n        selects.forEach((element, index) => {\r\n            let button = cc.instantiate(this.defaultSelectButton);\r\n            //将生成的按钮记录至数组\r\n            this.selectButtons[this.selectButtons.length] = button;\r\n            button.getComponent(SelectButton).varName = varName;\r\n            button.getComponent(SelectButton).value = index;\r\n            button.getComponent(SelectButton).textLabel.string = element;\r\n            button.parent = this.node;\r\n            button.setPosition(button.position.x, startPosY - index * 200);\r\n            button.active = true;\r\n        });\r\n\r\n    }\r\n\r\n    endSelects(){\r\n        if(StatusManager.instance.status != Status.Select){\r\n            cc.error(\"当前不是选择选项状态，当前状态为：\" + InputManager.instance.status);\r\n            return;\r\n        }\r\n        this.selectButtons.forEach((element) => {\r\n            element.destroy();\r\n        });\r\n        this.selectButtons = [];\r\n        StatusManager.instance.status = Status.Play;\r\n        ContentManager.instance.next();\r\n    }\r\n    \r\n}"]}