{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\parsers/assets\\Script\\parsers\\CommandParserInterface.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,iFAAiF;AACjF,yFAAyF;AACzF,mBAAmB;AACnB,2FAA2F;AAC3F,mGAAmG;AACnG,8BAA8B;AAC9B,2FAA2F;AAC3F,mGAAmG;;AAE7F,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C;IAA6D,0CAAY;IADzE;QAAA,qEAiBC;QAbG,sBAAgB,GAAa,EAAE,CAAC;;IAapC,CAAC;IATG,4CAAW,GAAX,UAAY,KAAY;QACpB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACjC,IAAI,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACvB,IAAG,OAAM,CAAC,OAAO,CAAC,IAAI,WAAW,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,EAAE,EAAC;gBACpE,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAZD;QADC,QAAQ,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;oEACU;IAHN,sBAAsB;QADnD,OAAO;OACsB,sBAAsB,CAgBnD;IAAD,6BAAC;CAhBD,AAgBC,CAhB4D,EAAE,CAAC,SAAS,GAgBxE;kBAhB6B,sBAAsB","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\parsers","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default abstract class CommandParserInterface extends cc.Component {\r\n\r\n    @property([cc.String])\r\n    needParseCommand: string[] = [];\r\n    \r\n    abstract parse(jsonMessage);\r\n\r\n    isExistNull(value: any[]): boolean{\r\n        for(let i = 0; i < value.length; i++){\r\n            let element = value[i];\r\n            if(typeof(element) == \"undefined\" || element === null || element === \"\"){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"]}