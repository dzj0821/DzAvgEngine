{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\parsers/assets\\Script\\parsers\\SelectCommandParser.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\parsers","sourcesContent":["import CommandParserInterface from \"./CommandParserInterface\";\r\nimport SelectManager from \"../SelectManager\";\r\nimport ManagerInterface from \"../ManagerInterface\";\r\nimport ContentManager from \"../ContentManager\";\r\nimport ContentStatus from \"../enum/ContentStatus\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SelectCommandParser extends CommandParserInterface {\r\n\r\n    @property({\r\n        visible: false,\r\n    })\r\n    selecting: boolean = false;\r\n\r\n    @property({\r\n        visible: false,\r\n    })\r\n    selectVarName: string = \"\";\r\n\r\n    @property({\r\n        visible: false,\r\n    })\r\n    selects: string[] = [];\r\n\r\n    start () {\r\n        ManagerInterface.managersIsExist([SelectManager, ContentManager]);\r\n    }\r\n\r\n    parse(jsonMessage) {\r\n        switch(jsonMessage.Command){\r\n            case \"SelectStart\":\r\n                ContentManager.instance.status = ContentStatus.ReadNext;\r\n                if(typeof(jsonMessage.Arg1) == \"undefined\" || jsonMessage.Arg1 == \"\"){\r\n                    cc.error(\"SelectStart命令应设置Arg1一个变量名用来存储玩家选择的选项\");\r\n                    return;\r\n                }\r\n                if(this.selecting){\r\n                    cc.error(\"SelectStart已经执行过，是否上个Select忘记执行SelectEnd？\");\r\n                    return;\r\n                }\r\n                this.selecting = true;\r\n                this.selectVarName = jsonMessage.Arg1;\r\n                break;\r\n            case \"Select\":\r\n                ContentManager.instance.status = ContentStatus.ReadNext;\r\n                if(this.isExistNull([jsonMessage.Arg1, jsonMessage.Text])){\r\n                    cc.error(\"SelectStart命令应设置Arg1一个变量名用来存储玩家选择的选项，Text作为选项显示的文本\");\r\n                    return;\r\n                }\r\n                let value = Number(jsonMessage.Arg1);\r\n                if(value == NaN || value % 1 !== 0 || !this.isExistNull([this.selects[value]])){\r\n                    cc.error(\"参数不合法：Select的Arg1应该是所有选项中的一个唯一的整数\");\r\n                    return;\r\n                }\r\n                if(!this.selecting){\r\n                    cc.error(\"尚未执行SelectStart命令\");\r\n                    return;\r\n                }\r\n                this.selects[value] = jsonMessage.Text;\r\n                break;\r\n            case \"SelectEnd\":\r\n                ContentManager.instance.status = ContentStatus.Select;\r\n                SelectManager.instance.showSelects(this.selectVarName, this.selects);\r\n                this.selecting = false;\r\n                this.selects = [];\r\n                return;\r\n            default:\r\n                cc.error(\"未知指令：\" + jsonMessage.Command);\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n"]}